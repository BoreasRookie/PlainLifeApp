package com.xwzx.equipmanager.mq;

import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import com.rabbitmq.client.AMQP;
import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.Consumer;
import com.rabbitmq.client.DefaultConsumer;
import com.rabbitmq.client.Envelope;
import com.xwzx.equipmanager.App;
import com.xwzx.equipmanager.Constant;
import com.xwzx.equipmanager.utils.PhoneInfoUtils;
import com.xwzx.equipmanager.utils.RxTimer;
import com.xwzx.equipmanager.utils.TimeUtils;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicLong;

import io.reactivex.Observable;
import io.reactivex.schedulers.Schedulers;

import static com.xwzx.equipmanager.mq.CommonString.*;


/**
 *
 */
public class RabbitMQConfiguration {
    private static final String TAG = RabbitMQConfiguration.class.getSimpleName();
    private static final String SEND_TAG = "发送消息：";
    private static final String RECE_TAG = "收到消息";
    private static final String POS_SEND_TAG = "发送POS消息";
    private static final String POS_RECE_TAG = "收到POS消息";
    private static final String POSITION_EXCHANGE_UP = "position_exchange_up";
    private static final String POSITION_EXCHANGE_DW = "position_exchange_dw";
    private static final String POSITION_EXCHANGE_POSITION = "cmd_position";
    private String MQ_QUEUE_UP = "loc_up_";
    private String MQ_QUEUE_DW = "loc_dw_";
    private String MQ_QUEUE_POS = "cmd_q_pos_";
    private Consumer consumer = null;
    private Consumer posConsumer = null;
    //    public String[] coord = "124.548902,47.294591 124.553039,47.293829 124.559413,47.292622 124.577414,47.289005 124.579533,47.28849 124.58108,47.28805 124.583432,47.287316 124.585091,47.28673 124.586912,47.285999 124.591854,47.283829 124.596717,47.281665 124.598097,47.281048 124.607539,47.276855 124.609942,47.275797 124.618467,47.272076 124.620732,47.27133 124.623126,47.270539 124.631622,47.267945 124.6324,47.267719 124.641216,47.265146 124.641385,47.265098 124.646067,47.26383 124.651877,47.262505 124.654259,47.261961 124.66078,47.260489 124.675422,47.257109 124.678651,47.256339 124.682802,47.255343 124.683651,47.255135 124.690624,47.25342 124.702931,47.250288 124.720121,47.245656 124.726918,47.243804 124.729112,47.243218 124.74001,47.240316 124.740522,47.240202 124.751017,47.237464 124.753473,47.236708 124.755069,47.236181 124.756614,47.235565 124.757879,47.235039 124.759732,47.234171 124.763255,47.23237 124.766785,47.230588 124.769011,47.229468 124.774097,47.226916 124.778447,47.224732 124.779927,47.223981 124.780195,47.223847 124.782678,47.222605 124.788045,47.21989 124.789895,47.219019 124.791686,47.218285 124.792184,47.218072 124.794862,47.217055 124.814476,47.209401 124.823106,47.205911 124.8255,47.204903 124.826587,47.204405 124.827977,47.203681 124.829316,47.202898 124.830696,47.202013 124.832106,47.201026 124.833436,47.199971 124.834877,47.198643 124.840639,47.192552 124.845742,47.187158 124.846014,47.186863 124.848357,47.184394 124.849282,47.18359 124.850006,47.183059 124.850851,47.182506 124.852127,47.181828 124.854919,47.180524 124.858371,47.17891 124.859594,47.17833 124.862589,47.176993 124.86705,47.174924 124.872721,47.172322 124.876339,47.17068 124.881603,47.168301 124.88206,47.168098 124.88373,47.167212 124.884922,47.166471 124.886401,47.165285 124.887116,47.164597 124.887771,47.163899 124.888574,47.162623 124.88904,47.161591 124.889466,47.160248 124.889545,47.15986 124.889703,47.159212 124.88998,47.157107 124.889979,47.157101 124.890117,47.155503 124.890374,47.153507 124.89068,47.151363 124.891629,47.144269 124.891906,47.142264 124.891906,47.142264 124.892015,47.141486 124.892322,47.139512 124.892431,47.138874 124.892808,47.137111 124.893662,47.133468 124.894408,47.130073 124.894855,47.128042 124.895302,47.126291 124.8958,47.124132 124.896676,47.11986 124.89878,47.109245 124.899797,47.104136 124.900625,47.100004 124.900715,47.099556 124.901493,47.095482 124.902659,47.089456 124.902799,47.088769 124.903794,47.083938 124.904152,47.081765 124.904242,47.079587 124.904391,47.07344 124.904411,47.07229 124.9045,47.068721 124.904598,47.066903 124.904943,47.061638 124.905385,47.055614 124.905424,47.055095 124.905602,47.053778 124.908089,47.046717 124.909577,47.042579 124.910033,47.041235 124.910261,47.040559 124.910489,47.039882 124.911203,47.037741 124.915882,47.022885 124.917286,47.018589 124.917445,47.01812 124.918233,47.015607 124.918313,47.015247 124.919311,47.010775 124.91985,47.008349 124.92036,47.006353 124.92066,47.005255 124.921049,47.004457 124.921329,47.003879 124.922538,47.002405 124.923927,47.00122 124.935256,46.995025 124.936853,46.99389 124.937858,46.9929 124.939044,46.991387 124.939759,46.989589 124.939891,46.988368 124.939802,46.986979 124.939532,46.986043 124.939,46.98483 124.933538,46.977216 124.933537,46.977212 124.930555,46.97297 124.929554,46.971405 124.929315,46.970946 124.928655,46.969288 124.928476,46.967969 124.928416,46.967149 124.928477,46.965399 124.92967,46.962116 124.931824,46.956187 124.939099,46.935949 124.940502,46.93204 124.941324,46.929908 124.942377,46.927002 124.943299,46.924308 124.943821,46.922899 124.944875,46.920112 124.945296,46.918915 124.945587,46.91791 124.945848,46.916775 124.946048,46.915541 124.946348,46.913296 124.946598,46.911121 124.946728,46.910468 124.946889,46.909886 124.94715,46.909251 124.948186,46.907212 124.949946,46.9038 124.952513,46.898862 124.953389,46.896615 124.95603,46.889424 124.957704,46.884872 124.958652,46.882394 124.959813,46.879093 124.960883,46.876124 124.961367,46.874905 124.964487,46.866231 124.964901,46.865104 124.965022,46.864772 124.965556,46.863573 124.966091,46.862584 124.96727,46.860635 124.967613,46.86007 124.967915,46.859685 124.968862,46.858731 124.969667,46.858019 124.970542,46.857366 124.971468,46.856763 124.972714,46.856106 124.973358,46.855778 124.975428,46.854965 124.977144,46.854487 124.978519,46.854206 124.979191,46.85406 124.982048,46.853613 124.988522,46.852585 124.99056,46.852261 124.991399,46.852105 124.991398,46.852101 124.996913,46.851293 124.999563,46.850903 125.001165,46.850674 125.005183,46.850064 125.006584,46.849788 125.007141,46.849688 125.008224,46.849417 125.009138,46.849193 125.011502,46.848468 125.013359,46.847774 125.014203,46.847401 125.015384,46.846894 125.016069,46.846548 125.016834,46.846163 125.018105,46.845438 125.023815,46.841758 125.027193,46.839538 125.030275,46.837537 125.033399,46.835509 125.034425,46.834742 125.035789,46.833697 125.036138,46.83344 125.036337,46.833262 125.03824,46.831589 125.039147,46.830726 125.040045,46.829783 125.041032,46.828668 125.04178,46.827762 125.042399,46.826935 125.043716,46.825089 125.044804,46.823231 125.047141,46.818801 125.049749,46.813914 125.050519,46.81272 125.05215,46.810531 125.053261,46.809284 125.055025,46.80747 125.05705,46.80566 125.058525,46.804533 125.059298,46.803934 125.061327,46.802507 125.061598,46.802323 125.063838,46.80052 125.066271,46.79825 125.067407,46.79705 125.070123,46.79389 125.076403,46.786418 125.081236,46.780694 125.082575,46.779299 125.083209,46.778647 125.084256,46.777708 125.085344,46.776849 125.086491,46.776039 125.08799,46.775044 125.089318,46.774293 125.090324,46.773788 125.090917,46.77349 125.092646,46.772706 125.094213,46.772107 125.096091,46.771446 125.097717,46.770981 125.099833,46.770465 125.104632,46.769593 125.105802,46.769392 125.109881,46.768517 125.111528,46.768054 125.113354,46.767415 125.114721,46.766825 125.115349,46.766551 125.116824,46.765815 125.118139,46.765069 125.119454,46.764205 125.120489,46.763438 125.121495,46.762602 125.123615,46.760513 125.125615,46.758216 125.127783,46.755834 125.130218,46.75317 125.13153,46.751725 125.132614,46.750516 125.135804,46.74698 125.135804,46.746976 125.135864,46.746847 125.136222,46.746374 125.136391,46.746058 125.13647,46.745739 125.136461,46.745349 125.136313,46.744957 125.136124,46.744683 125.13542,46.744089 125.134587,46.743783 125.132622,46.743145 125.13154,46.742764 125.130974,46.742604 125.129902,46.742434 125.129038,46.742408 125.128273,46.742454 125.128272,46.742453 125.127895,46.742506 125.127587,46.742551 125.127348,46.742587 125.126186,46.742746 125.12552,46.742835 125.125093,46.742868 125.124695,46.742862 125.124308,46.742786 125.124149,46.742723 125.12401,46.742661 125.123861,46.742569 125.123632,46.742356 125.123553,46.742255 125.123464,46.742073 125.123414,46.741893 125.123415,46.741773 125.123425,46.741713 125.123524,46.741515 125.123554,46.741475 125.123803,46.741259 125.12439,46.740889 125.124688,46.740643 125.124887,46.740447 125.124927,46.740398 125.125116,46.740161 125.125205,46.740022 125.125275,46.739884 125.125355,46.739715 125.125395,46.739636 125.125484,46.739447 125.125584,46.739219 125.125583,46.739218 125.125673,46.738539 125.125932,46.737464 125.12638,46.736112 125.126769,46.735219 125.131553,46.724289 125.132785,46.721423 125.133203,46.720082 125.133421,46.718906 125.133481,46.717437 125.133451,46.715377 125.133263,46.713933 125.132307,46.706234 125.131929,46.703406 125.13155,46.701088 125.130982,46.698487 125.130465,46.696957 125.128065,46.68992 125.127238,46.687185 125.126799,46.685207 125.126629,46.684273 125.126409,46.683029 125.125699,46.678046 125.125479,46.676452 125.125329,46.675509 125.125328,46.675508 125.125118,46.673794 125.124779,46.672448 125.12439,46.670911 125.123823,46.669152 125.123683,46.66875 125.123355,46.667955 125.123036,46.66718 125.12215,46.665367 125.120069,46.661138 125.120069,46.661137 125.119133,46.659245 125.119033,46.659044 125.11724,46.655334 125.116732,46.654269 125.116294,46.653365 125.115567,46.651838 125.115378,46.651437 125.115288,46.651256 125.11485,46.650333 125.11187,46.644083 125.110345,46.641027 125.109417,46.639095 125.109416,46.639094 125.108449,46.637092 125.107561,46.635241 125.106733,46.633482 125.106493,46.632962 125.106174,46.632282 125.105445,46.630734 125.105216,46.630244 125.105026,46.629845 125.104277,46.628247 125.103668,46.626919 125.102339,46.623965 125.101469,46.62219 125.101468,46.622189 125.100368,46.619946 125.099548,46.618283 125.098827,46.616948 125.098677,46.61666 125.096894,46.613516 125.095851,46.611607 125.095771,46.611458 125.09523,46.610455 125.094929,46.609918 125.093856,46.607991 125.093605,46.607524 125.093354,46.607078 125.093353,46.607077 125.092841,46.606314 125.092841,46.606314 125.092801,46.606274 125.09247,46.605859 125.091907,46.605466 125.091294,46.605205 125.090993,46.605089 125.090631,46.604945 125.090319,46.604799 125.090159,46.604712 125.090078,46.604653 125.089535,46.604241 125.089294,46.603975 125.089033,46.603519 125.088953,46.603191 125.088953,46.602981 125.088953,46.602731 125.089024,46.60184 125.089044,46.60137 125.089024,46.60083 125.088954,46.600451 125.088733,46.599785 125.088371,46.598871 125.088369,46.598869 125.087877,46.597907 125.087595,46.597362 125.087364,46.596916 125.087112,46.59631 125.086861,46.595635 125.086217,46.593496 125.085975,46.59268 125.085885,46.592401 125.085804,46.592133 125.085754,46.591944 125.085734,46.591814 125.085291,46.590342 125.08514,46.589884 125.085089,46.589735 125.084858,46.589179 125.084646,46.588613 125.084213,46.587571 125.084173,46.587472 125.082943,46.584934 125.082942,46.584932 125.081238,46.581323 125.079493,46.577796 125.078948,46.576636 125.078161,46.574971 125.077838,46.574287 125.077111,46.57274 125.076688,46.571838 125.075789,46.569935 125.075658,46.569658 125.074124,46.566316 125.073145,46.564134 125.072509,46.562746 125.072045,46.561765 125.071813,46.561279 125.07034,46.558255 125.070339,46.558255 125.070086,46.557689 125.070016,46.55747 125.069633,46.556687 125.068664,46.554484 125.068533,46.554206 125.067132,46.55107 125.066749,46.550207 125.066547,46.54976 125.066437,46.549522 125.066215,46.549096 125.064714,46.54562 125.062641,46.540691 125.062188,46.539487 125.061836,46.538482 125.060359,46.533573 125.060358,46.533571 125.060177,46.532724 125.059595,46.530612 125.059354,46.529775 125.05809,46.52629 125.056766,46.523475 125.056065,46.521932 125.055374,46.520529 125.054352,46.518478 125.053291,46.516327 125.052441,46.514044 125.052251,46.513525 125.051521,46.51154 125.050753,46.508075 125.050674,46.507545 125.050475,46.506367 125.050266,46.505108 125.050265,46.505107 125.049987,46.502529 125.049987,46.502529 125.049332,46.496353 125.049113,46.494915 125.048824,46.493376 125.048055,46.490408 125.047586,46.48894 125.046777,46.486781 125.045439,46.483651 125.04433,46.48119 125.043462,46.479257 125.042753,46.477655 125.041695,46.475391 125.041515,46.47499 125.035398,46.46116 125.032904,46.455509 125.032206,46.453839 125.032017,46.453396 125.031917,46.453075 125.031897,46.453005 125.031079,46.450283 125.03053,46.447894 125.03016,46.445698 125.029859,46.443513 125.029768,46.441961 125.029747,46.44033 125.029747,46.44014 125.02983,46.432439 125.029849,46.431519 125.030014,46.42302 125.030014,46.42291 125.029954,46.421619 125.029951,46.421617 125.03007,46.417099 125.03008,46.415649 125.03009,46.415359 125.030181,46.408701 125.030263,46.403443 125.030263,46.402923 125.030315,46.400045 125.030347,46.397936 125.030361,46.392458 125.030361,46.392388 125.030372,46.391409 125.030415,46.38824 125.030269,46.385469 125.029933,46.382895 125.02927,46.379746 125.028606,46.377307 125.027684,46.374633 125.026772,46.371978 125.016477,46.346136 125.013753,46.33928 125.013385,46.338393 125.012042,46.334486 125.011195,46.331579 125.010627,46.329297 125.010028,46.326375 125.009228,46.320178 125.008848,46.3169 125.006742,46.30115 125.006553,46.299467 125.005271,46.290845 125.004746,46.287377 125.00422,46.285299 125.00283,46.281189 125.000098,46.275932 124.996637,46.270905 124.993521,46.26729 124.983827,46.257753 124.982647,46.256588 124.982644,46.256585 124.981683,46.25564 124.97929,46.253276 124.977887,46.251898 124.959934,46.2344 124.95672,46.231352 124.944934,46.219846 124.944361,46.219285 124.94113,46.216082 124.940386,46.215352 124.938697,46.213542 124.937792,46.212492 124.935963,46.21018 124.935551,46.209573 124.934346,46.207803 124.93302,46.205602 124.932548,46.204745 124.931313,46.202151 124.930319,46.199704 124.929737,46.197916 124.929165,46.195857 124.928783,46.193448 124.925895,46.173038 124.925665,46.171408 124.925416,46.169618 124.925217,46.168228 124.923059,46.153037 124.922585,46.148137 124.922537,46.145808 124.92264,46.14285 124.922872,46.140511 124.923063,46.138973 124.923976,46.134647 124.925098,46.13108 124.928573,46.12078 124.928944,46.119689 124.928941,46.119687 124.930494,46.115072 124.930894,46.11382 124.931275,46.112718 124.931365,46.112458 124.931485,46.112107 124.932616,46.108731 124.937031,46.095491 124.937871,46.09171 124.937971,46.091239 124.938211,46.089636 124.93846,46.087923 124.938618,46.08529 124.938584,46.081029 124.938239,46.077401 124.936082,46.061791 124.935579,46.058195 124.935579,46.058194 124.935529,46.057634 124.935369,46.052906 124.935419,46.051866 124.93551,46.050335 124.935711,46.048454 124.936405,46.044458 124.936899,46.042313 124.938519,46.037347 124.939143,46.03556 124.940352,46.032256 124.940473,46.031795 124.94386,46.02213 124.94387,46.0221 124.946774,46.014036 124.947077,46.013181 124.948236,46.010511 124.94875,46.009362 124.949154,46.008525 124.950403,46.006123 124.951975,46.003324 124.963002,45.986282 124.967356,45.979644 124.967809,45.978957 124.970209,45.975228 124.971956,45.972183 124.974513,45.966999 124.974693,45.966527 124.975304,45.964939 124.975924,45.962822 124.976665,45.960334 124.976975,45.95912 124.977734,45.955462 124.982711,45.922298 124.982851,45.921368 124.983022,45.920288 124.983264,45.918828 124.983716,45.916857 124.984288,45.915076 124.984649,45.914165 124.98501,45.913385 124.985371,45.912655 124.986673,45.910485 124.987074,45.909925 124.988095,45.908577 124.990045,45.906452 124.991874,45.904761 124.992113,45.904543 124.993491,45.903462 125.001536,45.897629 125.00658,45.893978 125.01595,45.887267 125.023827,45.88161 125.02477,45.880927 125.034567,45.873874 125.041255,45.86901 125.045579,45.865853 125.045969,45.865523 125.049469,45.862588 125.052943,45.85933 125.055157,45.856913 125.057443,45.85417 125.061024,45.849124 125.063714,45.844434 125.06552,45.840274 125.065781,45.839529 125.066815,45.836531 125.070531,45.823501 125.07202,45.818283 125.073702,45.812581 125.075184,45.807173 125.075629,45.805004 125.075942,45.802689 125.076095,45.800626 125.076116,45.799356 125.076106,45.798417 125.075997,45.79667 125.075727,45.794336 125.075407,45.792543 125.074965,45.790722 125.072697,45.782949 125.072175,45.78114 125.071744,45.779558 125.07081,45.776037 125.069788,45.770758 125.069599,45.765852 125.06959,45.765693 125.06957,45.765193 125.06949,45.762975 125.06943,45.761406 125.069429,45.761401 125.069339,45.758623 125.069309,45.757493 125.069269,45.756144 125.069259,45.755584 125.069228,45.754185 125.069067,45.750528 125.068973,45.744058 125.068963,45.743438 125.06886,45.739659 125.068684,45.733351 125.068225,45.716263 125.068224,45.714972 125.068644,45.711784 125.069538,45.708407 125.070895,45.705471 125.079001,45.688805 125.084052,45.678422 125.086966,45.672473 125.088447,45.669341 125.089183,45.66766 125.090101,45.665347 125.090545,45.663461 125.090817,45.662178 125.090999,45.660975 125.09103,45.660605 125.091029,45.660604 125.09113,45.659583 125.091192,45.658082 125.091183,45.657243 125.091034,45.655106 125.090964,45.654677 125.090854,45.654029 125.090624,45.652572 125.090323,45.651587 125.089732,45.649637 125.088547,45.646856 125.083931,45.638405 125.083871,45.638307 125.083347,45.637376 125.081616,45.634198 125.078966,45.629389 125.074168,45.62072 125.068793,45.610978 125.067189,45.607635 125.066443,45.605928 125.062874,45.597051 125.059914,45.58961 125.058978,45.587261 125.058976,45.58726 125.05775,45.584193 125.057398,45.583247 125.056916,45.582012 125.056454,45.580957 125.055551,45.579075 125.054578,45.577164 125.053745,45.57572 125.047788,45.565848 125.047649,45.565608 125.04631,45.56333 125.044742,45.560689 125.044163,45.559708 125.040913,45.554197 125.039478,45.551819 125.037597,45.548526 125.036015,45.545942 125.033062,45.540949 125.031462,45.538379 125.030677,45.537318 125.030002,45.536409 125.028969,45.535133 125.027866,45.533816 125.026367,45.532131 125.024431,45.530148 125.023478,45.529251 125.021969,45.527873 125.020043,45.526136 125.019289,45.525462 125.017672,45.52401 125.017036,45.523478 125.015578,45.522129 125.013195,45.520013 125.012699,45.519563 125.012222,45.519124 125.011815,45.518756 125.010644,45.517594 125.010088,45.517004 125.0097,45.516547 125.009273,45.516009 125.008846,45.515421 125.008578,45.515026 125.00824,45.5145 125.007774,45.513692 125.007465,45.513076 125.006949,45.511827 125.006591,45.510721 125.006302,45.509476 125.006153,45.508624 125.005764,45.505807 125.005375,45.50292 125.004556,45.496845 125.004035,45.493006".split(" ");
    public String[] coord = "116.130039,39.75462 116.130367,39.754706 116.130367,39.754706 116.130854,39.754354 116.131073,39.754188 116.131331,39.753993 116.13155,39.753837 116.131937,39.753594 116.132066,39.753506 116.13303,39.752873 116.133557,39.752523 116.133835,39.752318 116.133935,39.75223 116.134054,39.752152 116.134352,39.751908 116.13464,39.751673 116.13473,39.751615 116.134819,39.751536 116.134898,39.751478 116.135028,39.75137 116.135087,39.751331 116.135117,39.751302 116.135445,39.751038 116.136449,39.750246 116.136776,39.749983 116.136876,39.749894 116.137094,39.749728 116.137194,39.74964 116.137392,39.749484 116.137661,39.749269 116.137661,39.749267 116.138167,39.748846 116.138922,39.74824 116.139061,39.748123 116.139121,39.748084 116.13934,39.747898 116.139916,39.747448 116.139916,39.747448 116.141724,39.74601 116.142102,39.745677 116.142251,39.745479 116.14235,39.745341 116.142499,39.745434 116.142499,39.745434 116.143961,39.746339 116.145741,39.747439 116.147034,39.748269 116.148229,39.749018 116.148477,39.749181 116.148607,39.749253 116.148945,39.749468 116.150976,39.750757 116.151752,39.751247 116.152141,39.751492 116.154352,39.752878 116.155678,39.753711 116.156067,39.753965 116.156495,39.754219 116.159906,39.756335 116.160356,39.756618 116.161154,39.757112 116.161753,39.757495 116.161813,39.757545 116.161813,39.757545 116.161943,39.757666 116.162272,39.758037 116.163641,39.760041 116.165798,39.763324 116.165798,39.763324 116.166128,39.763825 116.166298,39.764065 116.166338,39.764135 116.166408,39.764245 116.167538,39.765844 116.167588,39.765924 116.168607,39.767382 116.168697,39.767491 116.168737,39.767551 116.168797,39.767641 116.170078,39.769477 116.170478,39.770016 116.171218,39.770942 116.171518,39.771291 116.171659,39.77147 116.171919,39.771779 116.172339,39.772286 116.172519,39.772495 116.172559,39.772545 116.17272,39.772724 116.173861,39.774086 116.174232,39.774523 116.174322,39.774623 116.174632,39.77499 116.175093,39.775517 116.175123,39.775546 116.176165,39.776767 116.176506,39.777144 116.176907,39.7776 116.177238,39.777967 116.177679,39.778442 116.177729,39.778572 116.178049,39.778928 116.179553,39.780681 116.179664,39.78081 116.179714,39.780869 116.179824,39.781008 116.180556,39.781849 116.18164,39.783105 116.182693,39.78432 116.183547,39.785308 116.183546,39.785308 116.184108,39.78597 116.184239,39.786108 116.184882,39.786838 116.185123,39.787104 116.187212,39.789031 116.187714,39.789483 116.187714,39.789483 116.188719,39.790376 116.190065,39.791583 116.190196,39.79174 116.190407,39.791947 116.190548,39.792084 116.190749,39.792271 116.191794,39.793182 116.192096,39.793437 116.194167,39.794799 116.194901,39.795266 116.195163,39.795441 116.195273,39.795519 116.195997,39.795956 116.196661,39.796384 116.196712,39.796423 116.196943,39.796568 116.197074,39.796646 116.197074,39.796646 116.197405,39.79687 116.197808,39.797283 116.198119,39.797757 116.19821,39.797965 116.19828,39.798164 116.198481,39.79869 116.198501,39.79875 116.198732,39.799355 116.198812,39.799564 116.199093,39.800289 116.199415,39.801153 116.199465,39.801292 116.199635,39.801728 116.199846,39.802304 116.199947,39.802633 116.199987,39.803032 116.199997,39.803182 116.199946,39.803572 116.199755,39.804606 116.199664,39.805137 116.199613,39.805438 116.199623,39.805758 116.199684,39.806097 116.199854,39.806533 116.199985,39.806841 116.200327,39.807625 116.200648,39.808349 116.200749,39.808567 116.2009,39.808895 116.20101,39.809143 116.201131,39.8094 116.201523,39.810273 116.201704,39.81067 116.201845,39.810988 116.202086,39.811524 116.202147,39.811642 116.202146,39.811642 116.202669,39.812783 116.202971,39.813368 116.203152,39.813715 116.203313,39.813972 116.203544,39.814278 116.203745,39.814485 116.203916,39.814622 116.204208,39.814857 116.204882,39.815406 116.205555,39.815935 116.205827,39.816111 116.20633,39.816373 116.206722,39.816516 116.208189,39.816874 116.209395,39.817156 116.210159,39.817426 116.210159,39.817426 116.2103,39.817494 116.210431,39.817552 116.210571,39.81763 116.210712,39.817708 116.211124,39.817983 116.211204,39.818052 116.211736,39.818015 116.212289,39.817818 116.21252,39.817775 116.212741,39.817813 116.213022,39.818009 116.213022,39.818009 116.213333,39.818165 116.213504,39.818314 116.213835,39.8187 116.214297,39.819255 116.214508,39.819452 116.214508,39.819452 116.21497,39.819898 116.215943,39.820658 116.216525,39.821233 116.217468,39.822044 116.217709,39.822312 116.21794,39.822661 116.21794,39.822661 116.21818,39.822929 116.218742,39.823605 116.218963,39.823933 116.219123,39.824172 116.219254,39.824401 116.219535,39.824919 116.219896,39.825767 116.220077,39.826396 116.220177,39.826866 116.220248,39.827325 116.220288,39.827895 116.220288,39.828335 116.220179,39.829436 116.21989,39.831438 116.219481,39.834292 116.219132,39.836755 116.218814,39.839008 116.218125,39.842554 116.217797,39.844548 116.217677,39.845139 116.217676,39.845139 116.217676,39.845379 116.217687,39.845529 116.217727,39.845758 116.217747,39.845838 116.217777,39.845948 116.217807,39.846068 116.217868,39.846248 116.217968,39.846407 116.218028,39.846496 116.218229,39.846735 116.21836,39.846924 116.21852,39.847143 116.218691,39.847422 116.218942,39.8478 116.219032,39.847929 116.219113,39.848029 116.219203,39.848138 116.219323,39.848257 116.219694,39.848535 116.219925,39.848654 116.220426,39.848821 116.220867,39.848938 116.221799,39.849104 116.2227,39.84926 116.223672,39.849427 116.225943,39.849833 116.229093,39.850416 116.229653,39.850517 116.229653,39.850517 116.229743,39.850548 116.230432,39.85073 116.230742,39.850811 116.230892,39.850862 116.231091,39.850933 116.231291,39.851004 116.231501,39.851105 116.23254,39.85157 116.233578,39.852156 116.234736,39.852805 116.235005,39.852957 116.235334,39.85315 116.235664,39.853352 116.236442,39.853789 116.236911,39.854044 116.237529,39.85439 116.238047,39.854685 116.238625,39.855001 116.239632,39.855543 116.240021,39.855737 116.240509,39.855983 116.241077,39.85626 116.241276,39.856363 116.24271,39.857082 116.243188,39.857379 116.243447,39.857602 116.243845,39.858048 116.243845,39.858048 116.244084,39.858442 116.244164,39.858653 116.244863,39.861174 116.245022,39.861716 116.245361,39.862472 116.245719,39.863017 116.246197,39.863575 116.246595,39.863961 116.246854,39.864165 116.247122,39.86437 116.24763,39.864688 116.248953,39.86535 116.249917,39.865787 116.25292,39.86707 116.256518,39.868586 116.260464,39.870248 116.261487,39.870687 116.263197,39.871406 116.26445,39.871938 116.26445,39.871938 116.266658,39.872864 116.267742,39.873321 116.269235,39.873973 116.269235,39.873973 116.269722,39.87421 116.27253,39.875617 116.275279,39.876988 116.27836,39.878525 116.27836,39.878525 116.279716,39.879194 116.280565,39.879619 116.280565,39.879619 116.28343,39.881031 116.285978,39.882265 116.286898,39.882665 116.287678,39.882964 116.288999,39.883422 116.290661,39.883876 116.292343,39.884238 116.297226,39.88512 116.297226,39.88512 116.298761,39.885404 116.300438,39.885695 116.301111,39.885817 116.302637,39.886086 116.303481,39.886235 116.304416,39.886401 116.306899,39.886853 116.308698,39.887304 116.309473,39.88753 116.309473,39.887531 116.310257,39.887787 116.311524,39.888255 116.312933,39.88886 116.314914,39.889714 116.315417,39.889935 116.31591,39.890136 116.31591,39.890136 116.316775,39.89047 116.316876,39.890518 116.31759,39.890815 116.317962,39.890998 116.318355,39.891181 116.318496,39.891239 116.318858,39.891402 116.318858,39.891402 116.31934,39.891613 116.31934,39.891613 116.319672,39.891757 116.320718,39.892199 116.321181,39.8924 116.321493,39.892535 116.321654,39.892612 116.321694,39.892621 116.322277,39.892861 116.322569,39.892966 116.32272,39.893003 116.323052,39.893118 116.323253,39.893184 116.323836,39.893384 116.325575,39.894145 116.325575,39.894145 116.327264,39.894828 116.327616,39.894933 116.327776,39.89499 116.327806,39.89513 116.327816,39.89536 116.327816,39.89536 116.327836,39.895829 116.327836,39.895829 116.327997,39.896207 116.328127,39.896655 116.328257,39.897083 116.328287,39.897172 116.32889,39.897713 116.329221,39.898088 116.329522,39.898094 116.329693,39.898091 116.329794,39.89808 116.329924,39.898088 116.329985,39.898088 116.330146,39.898085 116.330547,39.89808 116.330688,39.898128 116.330688,39.898128 116.330738,39.898247 116.330748,39.898537 116.330777,39.899126 116.330777,39.899126 116.331019,39.899133 116.331581,39.899146 116.331782,39.899143 116.331852,39.899132 116.332375,39.899116 116.332435,39.899115 116.332585,39.899083 116.332887,39.89907 116.334383,39.899063 116.335316,39.899063 116.335547,39.899111 116.335627,39.89914 116.335928,39.899397 116.335898,39.899527 116.335897,39.899527 116.335987,39.900026 116.335967,39.900616 116.335905,39.902395 116.335915,39.902545 116.335915,39.902545 116.336165,39.902543 116.336968,39.902526 116.338242,39.902525 116.338292,39.902525 116.338292,39.902525 116.338813,39.902661 116.338813,39.902661 116.341839,39.902793 116.344782,39.902974 116.344782,39.902974 116.345342,39.903013 116.346672,39.903092 116.347592,39.903152 116.348662,39.903214 116.349241,39.903255 116.35013,39.903298 116.350689,39.90334 116.351278,39.903372 116.352237,39.903427 116.352746,39.90345 116.353205,39.903472 116.353724,39.903466 116.354043,39.903458 116.354043,39.903458 116.354362,39.90344 116.355779,39.903371 116.355778,39.903371 116.356147,39.903384 116.356307,39.903386 116.356696,39.903409 116.357334,39.903455 116.357682,39.903489 116.3583,39.903545 116.359217,39.903645 116.361029,39.903827 116.361696,39.903965 116.362492,39.904266 116.363248,39.904596 116.363686,39.904742 116.363795,39.904764 116.364024,39.904827 116.364382,39.904912 116.36475,39.904978 116.364959,39.905001 116.365168,39.905024 116.365506,39.905039 116.366759,39.905109 116.367366,39.905139 116.367635,39.905143 116.367635,39.905143 116.369544,39.905235 116.369633,39.905237 116.369673,39.905237 116.369812,39.90525 116.369981,39.905253 116.369991,39.905373 116.37,39.905533 116.370001,39.905533 116.37,39.905733 116.37,39.906093 116.36999,39.906663 116.369969,39.907142 116.369969,39.907542 116.369949,39.907771 116.369949,39.908051 116.369918,39.9097 116.369918,39.90983 116.369918,39.90989 116.369918,39.91009 116.369877,39.910759 116.369887,39.911259 116.369886,39.911599 116.369885,39.911599 116.369875,39.911919 116.369864,39.912998 116.369854,39.913148 116.369854,39.913148 116.369863,39.914458 116.369862,39.915348 116.369862,39.915348 116.369852,39.915517 116.369831,39.917146 116.369821,39.917586 116.36982,39.918176 116.36984,39.918816 116.369859,39.918947 116.369899,39.919197 116.370147,39.919871 116.370167,39.919952 116.370286,39.920264 116.370474,39.920757 116.370723,39.921381 116.37102,39.922236 116.37105,39.922417 116.37108,39.922567 116.371089,39.922847 116.371109,39.923147 116.371109,39.923327 116.371158,39.924378 116.371168,39.924468 116.371168,39.924688 116.371267,39.92601 116.371296,39.92693 116.371286,39.92735 116.371266,39.928069 116.371276,39.928749 116.371275,39.928749 116.371275,39.928919 116.371473,39.929503 116.371543,39.929734 116.371563,39.929804 116.371563,39.929804 116.371662,39.930006 116.372059,39.930863 116.372218,39.931236 116.372427,39.93169 116.372566,39.931972 116.372765,39.932366 116.373112,39.933102 116.37344,39.933788 116.373579,39.934101 116.373649,39.934252 116.373758,39.934504 116.373977,39.935098 116.374195,39.935872 116.374325,39.936484 116.374344,39.936564 116.374384,39.936775 116.374474,39.937217 116.374543,39.937948 116.374553,39.938058 116.374573,39.938319 116.374573,39.938319 116.374861,39.938344 116.375547,39.938396 116.375686,39.938409 116.376084,39.938436 116.377097,39.938515 116.377853,39.938569 116.379164,39.938673 116.379423,39.938688 116.379542,39.93869 116.379542,39.93869 116.379691,39.938692 116.3798,39.938694 116.380387,39.938715 116.381023,39.938746 116.38145,39.938774 116.382315,39.938819 116.38308,39.938873 116.383379,39.938898 116.385308,39.93903 116.385894,39.93908 116.386252,39.939096 116.386431,39.939098 116.38662,39.939111 116.386819,39.939125 116.387446,39.939164 116.388411,39.939209 116.390282,39.939316 116.39055,39.939329 116.390799,39.939343 116.391078,39.939346 116.392442,39.939414 116.392442,39.939414 116.393498,39.939456 116.394683,39.939529 116.395809,39.939591 116.396069,39.939613 116.396108,39.939614 116.396348,39.939626 116.396746,39.939659 116.397524,39.939706 116.398332,39.939742 116.398591,39.939754 116.399459,39.93975 116.399589,39.939751 116.399719,39.939752 116.400148,39.939755 116.401755,39.939753 116.402164,39.939755 116.402384,39.939746 116.402594,39.939746 116.402694,39.939747 116.402694,39.939746 116.402993,39.939738 116.404262,39.939731 116.406512,39.939743 116.406622,39.939743 116.406882,39.939743 116.407762,39.939752 116.409303,39.939749 116.409503,39.939758 116.409623,39.939758 116.410805,39.939764 116.411526,39.939781 116.412127,39.939768 116.412237,39.939757 116.412458,39.939746 116.412758,39.939734 116.414964,39.939659 116.415144,39.939657 116.415274,39.939657 116.415274,39.939656 116.415545,39.939644 116.415856,39.939631 116.416448,39.939646 116.418093,39.93966 116.418354,39.939657 116.421246,39.939673 116.421356,39.939672 116.421477,39.93968 116.423275,39.939806 116.423506,39.939812 116.423607,39.939821 116.423607,39.939821 116.423868,39.939807 116.425818,39.939808 116.427467,39.939782 116.428302,39.939778 116.428383,39.939777 116.429942,39.939751 116.430113,39.939748 116.430746,39.939737 116.432064,39.939724 116.432255,39.939721 116.432396,39.939718 116.432618,39.939714 116.432668,39.939713 116.433292,39.939702 116.433483,39.939699 116.434509,39.939681 116.434892,39.939674 116.435103,39.93967 116.435203,39.939668 116.435354,39.939666 116.436079,39.939653 116.436773,39.93965 116.437015,39.939646 116.437498,39.939637 116.437679,39.939634 116.43789,39.93963 116.438152,39.939625 116.438212,39.939624 116.438755,39.939614 116.438756,39.939612 116.439329,39.939582 116.43952,39.939569 116.439772,39.939554 116.439882,39.939552 116.439983,39.939361 116.440214,39.939227 116.440255,39.939206 116.440345,39.939194 116.440386,39.939194 116.440878,39.939225 116.440919,39.939234 116.441039,39.939242 116.44116,39.9393 116.441341,39.939467 116.441361,39.939497 116.441382,39.939566 116.441351,39.939737 116.441301,39.939818 116.44102,39.940013 116.44102,39.940012 116.440979,39.940183 116.440939,39.940854 116.44093,39.941054 116.44091,39.941314 116.440749,39.941937 116.440739,39.942367 116.440729,39.942657 116.440709,39.943098 116.440709,39.943128 116.440709,39.943128 116.440689,39.943558 116.440679,39.943778 116.440639,39.944649 116.440589,39.94484 116.440559,39.945531 116.440509,39.946582 116.44049,39.947012 116.440489,39.947012 116.440479,39.947543 116.44043,39.948514 116.44043,39.949004 116.44046,39.949213 116.44047,39.949363 116.44047,39.949403 116.440481,39.949653 116.440481,39.949803 116.440491,39.950193 116.440491,39.950363 116.440522,39.950773 116.440522,39.950773 116.440823,39.950767 116.441075,39.950753 116.441206,39.950751 116.441326,39.950749 116.441829,39.95074 116.443892,39.950705 116.444002,39.950743 116.444002,39.950742 116.444113,39.950931 116.444425,39.951445 116.444777,39.9519 116.445079,39.952215 116.44516,39.952304 116.445271,39.952442 116.445351,39.952531 116.445633,39.952836 116.445864,39.953102 116.446619,39.953741 116.446931,39.954056 116.446981,39.954155 116.447203,39.954312 116.447696,39.954684 116.447816,39.954702 116.448007,39.95483 116.449194,39.955672 116.451044,39.956967 116.451265,39.957114 116.451356,39.957173 116.451677,39.957379 116.451989,39.957615 116.452109,39.957694 116.452481,39.957969 116.453657,39.958806 116.453707,39.958845 116.45433,39.959288 116.4544,39.959347 116.455053,39.959841 116.455113,39.95989 116.455736,39.960444 116.455796,39.960493 116.455856,39.960553 116.455927,39.960622 116.456007,39.960692 116.456248,39.960909 116.456338,39.960988 116.456399,39.961038 116.45667,39.961275 116.45676,39.961355 116.457212,39.961751 116.457553,39.962048 116.457603,39.962088 116.457724,39.962197 116.457724,39.962197 116.457774,39.962236 116.458356,39.962752 116.459239,39.963526 116.45968,39.963923 116.459741,39.963972 116.459811,39.964032 116.460102,39.9643 116.460172,39.96436 116.460222,39.96441 116.460754,39.964857 116.460754,39.964857 116.461125,39.965205 116.461435,39.965413 116.462257,39.9658 116.462257,39.9658 116.462938,39.966197 116.463249,39.966406 116.46395,39.966975 116.46399,39.967014 116.46406,39.967074 116.46414,39.967144 116.46418,39.967184 116.464621,39.967583 116.464801,39.967733 116.465052,39.967963 116.465993,39.968812 116.466113,39.968922 116.466784,39.969522 116.467334,39.970022 116.469575,39.972057 116.470194,39.972609 116.470644,39.973011 116.471204,39.973523 116.471264,39.973574 116.471533,39.973805 116.471643,39.973915 116.471753,39.974006 116.471823,39.974076 116.472103,39.974328 116.472682,39.974861 116.472862,39.975032 116.473521,39.975626 116.473522,39.975626 116.47422,39.976251 116.4743,39.976342 116.475408,39.977351 116.475548,39.977482 116.476675,39.978512 116.477304,39.979078 116.478759,39.980424 116.479238,39.980859 116.479936,39.981497 116.481112,39.982582 116.481769,39.98318 116.481809,39.983221 116.48387,39.98512 116.48387,39.98512 116.484716,39.985892 116.484806,39.985974 116.484876,39.986045 116.485652,39.986757 116.487194,39.988191 116.487811,39.988761 116.489104,39.989953 116.489303,39.990127 116.489382,39.990218 116.489899,39.990697 116.49157,39.992256 116.492593,39.993215 116.493468,39.993981 116.493468,39.993981 116.494422,39.994868 116.494492,39.994939 116.494601,39.995041 116.494879,39.995306 116.497304,39.997561 116.497304,39.997561 116.499728,39.999835 116.500444,40.000578 116.502113,40.002428 116.503663,40.004135 116.503693,40.004165 116.504538,40.005079 116.50574,40.006169 116.50577,40.006199 116.505919,40.006342 116.506227,40.006647 116.506456,40.00685 116.508176,40.008437 116.509668,40.009798 116.51103,40.011007 116.511966,40.011779 116.512324,40.012093 116.513299,40.012915 116.514833,40.014211 116.515589,40.014899 116.517721,40.016807 116.519495,40.01839 116.519645,40.018561 116.519655,40.018571 116.521719,40.020311 116.522528,40.021124 116.522528,40.021124 116.523475,40.022307 116.523475,40.022307 116.525441,40.02526 116.526619,40.027039 116.526849,40.027529 116.526979,40.027719 116.526979,40.027719 116.527238,40.028059 116.528947,40.030605 116.529197,40.030984 116.529247,40.031074 116.530986,40.033637 116.531566,40.034504 116.532107,40.035281 116.532167,40.035381 116.532167,40.035381 116.533017,40.036625 116.533538,40.037382 116.533538,40.037382 116.534078,40.038198 116.534699,40.039093 116.536112,40.041171 116.536162,40.04125 116.536954,40.042403 116.537435,40.043188 116.538137,40.0444 116.538778,40.045703 116.53937,40.046956 116.53946,40.047145 116.53949,40.047195 116.539601,40.047434 116.539862,40.04793 116.540454,40.049153 116.541096,40.050445 116.541447,40.05116 116.541467,40.05121 116.541487,40.05124 116.542692,40.053674 116.543546,40.055132 116.544209,40.056152 116.545526,40.058162 116.545788,40.058558 116.546321,40.05937 116.546874,40.060191 116.547317,40.060684 116.547488,40.060872 116.548011,40.061313 116.548433,40.061636 116.549198,40.062123 116.5496,40.062327 116.549671,40.062365 116.549751,40.062404 116.550284,40.062635 116.550636,40.062789 116.550787,40.062856 116.55115,40.06302 116.551512,40.063174 116.551834,40.063328 116.552397,40.063588 116.55277,40.063771 116.553132,40.063955 116.553545,40.064158 116.554108,40.064448 116.554873,40.064944 116.556343,40.066117 116.557752,40.067242 116.558558,40.067817 116.559313,40.068444 116.559776,40.068906 116.560209,40.069378 116.560753,40.070088 116.561216,40.07088 116.561387,40.071228 116.561438,40.071307 116.561468,40.071416 116.561528,40.071545 116.561639,40.071813 116.561811,40.072381 116.562458,40.07609 116.562498,40.07635 116.562609,40.076988 116.562609,40.076988 116.563034,40.079531 116.563671,40.083352 116.563712,40.083571 116.563732,40.083721 116.563793,40.0841 116.563995,40.085317 116.564268,40.086953 116.564279,40.087013 116.564299,40.087112 116.5644,40.087681 116.564531,40.088479 116.564643,40.089187 116.564997,40.091312 116.565027,40.091492 116.565047,40.091642 116.565078,40.091841 116.565502,40.094345 116.566028,40.097398 116.566068,40.097647 116.566896,40.102675 116.566947,40.102964 116.567199,40.104411 116.567441,40.105837 116.567532,40.106376 116.567693,40.107314 116.567703,40.107444 116.567754,40.107833 116.568157,40.110147 116.568539,40.112472 116.56879,40.113598 116.568891,40.113977 116.568992,40.114285 116.569112,40.114703 116.569353,40.11545 116.570006,40.117031 116.570589,40.118203 116.571041,40.118996 116.571071,40.119026 116.571071,40.119026 116.571905,40.120335 116.572738,40.121445 116.572738,40.121445 116.57332,40.122118 116.573672,40.122384 116.574123,40.122519 116.574766,40.122612 116.574946,40.12275 116.575157,40.122788 116.575448,40.122905 116.575749,40.123152 116.575859,40.1233 116.575939,40.12351 116.575969,40.123749 116.575939,40.123919 116.575939,40.12392 116.575989,40.124609 116.576089,40.124878 116.57624,40.125047 116.576781,40.125501 116.579207,40.127522 116.582301,40.130114 116.585662,40.132955 116.586042,40.133284 116.586132,40.133364 116.586861,40.133974 116.590097,40.136699 116.593419,40.139544 116.593728,40.139796 116.597464,40.143006 116.597464,40.143006 116.60048,40.145589 116.60048,40.145589 116.601664,40.146603 116.601664,40.146603 116.603563,40.148229 116.604647,40.149175 116.604965,40.149449 116.605263,40.149714 116.605402,40.149836 116.605641,40.150059 116.605691,40.1501 116.60743,40.151537 116.609149,40.152826 116.609149,40.152826 116.610361,40.153686 116.610361,40.153686 116.612397,40.155012 116.614592,40.156302 116.614592,40.156302 116.615615,40.15685 116.61792,40.158033 116.619042,40.158593 116.61936,40.158749 116.619609,40.158883 116.620165,40.159163 116.621019,40.159599 116.622698,40.160438 116.625034,40.161618 116.625442,40.161824 116.626048,40.162134 116.628753,40.163506 116.631399,40.164822 116.632922,40.165581 116.633739,40.16599 116.634386,40.166308 116.636837,40.167521 116.637057,40.167623 116.637426,40.167806 116.637655,40.167928 116.638004,40.168091 116.638772,40.168467 116.640218,40.169236 116.641376,40.169972 116.641376,40.169972 116.642274,40.170616 116.643273,40.171439 116.643762,40.1719 116.643912,40.172051 116.644621,40.172872 116.644621,40.172872 116.644731,40.173012 116.644871,40.173192 116.645061,40.173453 116.645091,40.173503 116.645661,40.174363 116.646271,40.175423 116.646671,40.176183 116.646731,40.176313 116.646791,40.176443 116.647071,40.177113 116.647331,40.177853 116.647451,40.178313 116.647721,40.179553 116.647832,40.180423 116.647862,40.180922 116.647902,40.182093 116.647902,40.182293 116.647912,40.182743 116.647912,40.183063 116.647943,40.184373 116.647973,40.185763 116.647974,40.185863 116.647994,40.186753 116.648004,40.187273 116.648035,40.188633 116.648045,40.188793 116.648045,40.189243 116.648108,40.192334 116.648139,40.194064 116.648149,40.194425 116.64817,40.195555 116.648233,40.198276 116.648243,40.198786 116.648264,40.199686 116.648275,40.200276 116.648306,40.201537 116.648316,40.201957 116.648369,40.204467 116.648389,40.205228 116.648432,40.207338 116.648442,40.208068 116.648473,40.209139 116.648484,40.209539 116.648557,40.21303 116.648578,40.21411 116.648578,40.21435 116.648651,40.217381 116.648651,40.217381 116.648991,40.21776 116.648991,40.21776 116.649231,40.218 116.651675,40.21802 116.658343,40.218078 116.658594,40.218085 116.659417,40.218086 116.659959,40.218089 116.660311,40.218095 116.661617,40.218129 116.66245,40.218168 116.663315,40.218256 116.664109,40.218315 116.665365,40.218426 116.666622,40.218506 116.666843,40.218513 116.66803,40.218514 116.669549,40.218458 116.670273,40.218436 116.672225,40.218382 116.672527,40.218376 116.672889,40.21836 116.673724,40.218335 116.675243,40.218278 116.675998,40.218214 116.675998,40.218213 116.67629,40.218178 116.67787,40.218119 116.682589,40.217985 116.682719,40.217993 116.68275,40.218072 116.68275,40.218072 116.682851,40.218341 116.682861,40.21838 116.683173,40.219125 116.68404,40.221321 116.685249,40.224342 116.685269,40.224452 116.68537,40.22478 116.68544,40.225169 116.685471,40.225528 116.685451,40.226129 116.68531,40.226931 116.685009,40.227976 116.684929,40.228188 116.68507,40.228355 116.68508,40.228635 116.684829,40.22962 116.684307,40.231519 116.683854,40.233126 116.683623,40.23356 116.683322,40.233985 116.683321,40.233985 116.683361,40.234074 116.683753,40.234848 116.683834,40.235006 116.684025,40.235383 116.684156,40.235641 116.684286,40.235879 116.684608,40.236503 116.684769,40.236761 116.68491,40.236899 116.685282,40.237162 116.685624,40.237327 116.686087,40.237459 116.687394,40.237629 116.687524,40.237647 116.688037,40.237689 116.688258,40.237726 116.688519,40.237852 116.688871,40.238167 116.689253,40.238541 116.694143,40.243318 116.695026,40.244188 116.700359,40.249413 116.701069,40.250109 116.70667,40.255653 116.707949,40.256924 116.710464,40.259439 116.711761,40.260724 116.7124,40.261357 116.713416,40.262393 116.714293,40.263249 116.71528,40.264236 116.717023,40.265991 116.718894,40.267869 116.719103,40.268071 116.721899,40.270905 116.725587,40.274647 116.726561,40.275632 116.731568,40.280736 116.734994,40.284247 116.737239,40.286488 116.738242,40.287546 116.73843,40.28775 116.738689,40.288065 116.739166,40.288493 116.741878,40.291322 116.742454,40.291982 116.743219,40.292975 116.747356,40.298313 116.749953,40.301672 116.750321,40.302137 116.752333,40.304714 116.754147,40.307045 116.756381,40.309878 116.758327,40.312355 116.758477,40.312546 116.761983,40.317008 116.762953,40.318242 116.764844,40.320657 116.765454,40.321438 116.765634,40.321658 116.768909,40.325797 116.769741,40.326845 116.770794,40.328042 116.771466,40.328779 116.772689,40.329963 116.774234,40.331203 116.774444,40.331361 116.775277,40.331995 116.775558,40.332203 116.775558,40.332203 116.777104,40.333159 116.778289,40.333817 116.778399,40.333876 116.778399,40.333876 116.77859,40.333984 116.781011,40.335346 116.783333,40.336645 116.783333,40.336645 116.788443,40.339477 116.798388,40.344971 116.799455,40.345572 116.802243,40.347103 116.811162,40.352035 116.815038,40.354199 116.816423,40.354975 116.816764,40.355092 116.820624,40.355923 116.820834,40.355962 116.821435,40.356089 116.821526,40.356109 116.821526,40.356109 116.821325,40.35718 116.821295,40.35742 116.821265,40.35901 116.821265,40.35935 116.821265,40.35968 116.821244,40.36244 116.821244,40.36259 116.821244,40.36273 116.821244,40.36291 116.821244,40.365079 116.821414,40.365388 116.821554,40.365528 116.821574,40.365697 116.821504,40.365818 116.821424,40.365878 116.821234,40.365949 116.821233,40.365949 116.820962,40.366071 116.820852,40.366151 116.820672,40.366382 116.820401,40.366704 116.819037,40.368392 116.819037,40.368392 116.822632,40.370112 116.824714,40.371086 116.825484,40.371435 116.826374,40.371774 116.826514,40.371824 116.826903,40.371964 116.828013,40.372325 116.828103,40.372355 116.828103,40.372465 116.828113,40.372565 116.828113,40.372565 116.828113,40.372825 116.828102,40.373614 116.828052,40.373714 116.828031,40.374914 116.828041,40.375574 116.828041,40.375704 116.82805,40.376354 116.828089,40.377233 116.828089,40.377233 116.829358,40.377216 116.830197,40.377209 116.831425,40.377194".split(" ");
    private static int coord_index = 0;
    private String imei;

    private Context context;
    private static RabbitMQConfiguration rabbitMQConfiguration;
    private Connection sendConnection;
    private Connection receConnection;

    private Connection sendPosConnection;
    private Connection recePosConnection;

    private Channel sendChannel;
    private Channel receChannel;
    private Channel posSendChannel;
    private Channel posReceChannel;

    private Thread receSubscriber;
    private Thread recePosSubscriber;

    private boolean isNetworkConnect = true;
    private RxTimer rxTimer = null;

    private RabbitMQConfiguration() {
    }

    // 有界队列，最多能存放5个任务对象
    BlockingQueue<Runnable> limitArray = new ArrayBlockingQueue<>(5);
    BlockingQueue<Runnable> limitlist = new LinkedBlockingQueue<>(5);
    // 无界队列可以存放Integer.MAX_VALUE个任务
    BlockingQueue<Runnable> unLimitUpList = new LinkedBlockingQueue<>();
    BlockingQueue<Runnable> unLimitPosUpList = new LinkedBlockingQueue<>();

    private LinkedHashMap<MessageCallBack, String> outLineMessage = new LinkedHashMap<>();
    private LinkedHashMap<MessageCallBack, String> outLinePosMessage = new LinkedHashMap<>();
    private ThreadFactory upThreadFactory = null;
    private ThreadFactory posUpThreadFactory = null;

    private ExecutorService executorUpService = null;
    private ExecutorService executorPosUpService = null;

    public void setNetworkConnect(boolean isNetWorkConnect) {
        if (isNetWorkConnect) {
            if (rxTimer != null) {
                rxTimer.cancel();
                rxTimer = null;
            }
            rxTimer = new RxTimer();
            rxTimer.interval(1000, number -> {
                if (number > 2) {
                    this.isNetworkConnect = isNetWorkConnect;
                    this.basicPublishOutLineMsg();
                    this.basicPublishOutLinePosMsg();
                    rxTimer.cancel();
                }
            });
        } else {
            this.isNetworkConnect = isNetWorkConnect;
            if (rxTimer != null) {
                rxTimer.cancel();
                rxTimer = null;
            }
        }
    }

    public static RabbitMQConfiguration getInstance() {
        if (rabbitMQConfiguration == null) {
            synchronized (RabbitMQConfiguration.class) {
                if (rabbitMQConfiguration == null) {
                    rabbitMQConfiguration = new RabbitMQConfiguration();
                }
            }
        }
        return rabbitMQConfiguration;
    }

    public void init(Context context) {
        this.context = context;
        this.imei = PhoneInfoUtils.getImeiNum(context);
        if (App.getInstance().getNetWorkState()) {
            this.outLineMessage = new LinkedHashMap<>();
            this.outLinePosMessage = new LinkedHashMap<>();
            upThreadFactory = new ThreadFactory() {
                private AtomicLong mAtomicLong = new AtomicLong(0);

                @Override
                public Thread newThread(Runnable r) {
                    Thread thread = new Thread(r, "My-Thread-" + mAtomicLong.getAndIncrement());
                    return thread;
                }
            };

            posUpThreadFactory = new ThreadFactory() {
                private AtomicLong mAtomicLong = new AtomicLong(0);

                @Override
                public Thread newThread(Runnable r) {
                    Thread thread = new Thread(r, "Pos  My-Thread-" + mAtomicLong.getAndIncrement());
                    return thread;
                }
            };
            executorUpService = new ThreadPoolExecutor(30, 50, 5, TimeUnit.SECONDS, unLimitUpList, upThreadFactory, (r, executor) -> {
                System.out.println("executorUpService rejectedExecution" + r.toString());
            });
            executorPosUpService = new ThreadPoolExecutor(30, 50, 5, TimeUnit.SECONDS, unLimitPosUpList, posUpThreadFactory, (r, executor) -> {
                System.out.println("executorUpService rejectedExecution" + r.toString());
            });
            this.openMQChanal();
        }
    }

    private void openMQChanal() {
        Observable.create(emitter -> {
            try {
                sendConnection = ConnectionUtil.getConnection();
                sendConnection.addShutdownListener(cause -> {
                });
                sendChannel = sendConnection.createChannel();

                sendPosConnection = ConnectionUtil.getConnection();
                sendPosConnection.addShutdownListener(cause -> {
                });
                posSendChannel = sendPosConnection.createChannel();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (TimeoutException e) {
                e.printStackTrace();
            }
        }).subscribeOn(Schedulers.newThread())
                .subscribe();
    }

    public Channel getSendChannel() {
        return this.sendChannel;
    }

    public Channel getReceChannel() {
        return this.receChannel;
    }

    public Channel getPosSendChannel() {
        return this.posSendChannel;
    }

    public Channel getPosReceChannel() {
        return this.posReceChannel;
    }

    private final void basicPublishOutLineMsg() {
        if (this.outLineMessage != null && !this.outLineMessage.isEmpty()) {
            Log.e("--------", " basicPublishOutLineMsg 离线消息数量：" + this.outLineMessage.size());
            Set<Map.Entry<MessageCallBack, String>> entries = this.outLineMessage.entrySet();
            Iterator<Map.Entry<MessageCallBack, String>> iterator = entries.iterator();
            while (iterator.hasNext()) {
                Map.Entry<MessageCallBack, String> next = iterator.next();
                this.basicPublish(next.getKey(), true, next.getValue());
            }
            this.outLineMessage.clear();
        }
    }

    private final void basicPublishOutLinePosMsg() {
        if (!this.outLinePosMessage.isEmpty()) {
            Log.e("--------", "basicPublishOutLinePosMsg 离线消息数量：" + this.outLinePosMessage.size());
            Set<Map.Entry<MessageCallBack, String>> entries = this.outLinePosMessage.entrySet();
            Iterator<Map.Entry<MessageCallBack, String>> iterator = entries.iterator();
            while (iterator.hasNext()) {
                Map.Entry<MessageCallBack, String> next = iterator.next();
                this.basicPositionPublish(next.getKey(), true, next.getValue());
            }
            this.outLinePosMessage.clear();
        }
    }

    /**
     * 发送一般的消息          ****************************
     *
     * @param message
     */
    public void basicPublish(MessageCallBack message) {
        basicPublish(message, false, null);
    }

    /**
     * 发送一般的消息          ****************************
     *
     * @param mes 更新message的回调
     */
    public final void basicPublish(MessageCallBack mes, boolean isOutLine, String mesMessage) {
        if (this.isNetworkConnect) {
            executorUpService.execute(() -> {
                try {
                    if (sendChannel == null) {
                        if (sendConnection == null) {
                            sendConnection = ConnectionUtil.getConnection();
                        }
                        sendChannel = sendConnection.createChannel();
                    }
                    String message;
                    if (isOutLine) {
                        message = mesMessage;
                    } else {
                        message = mes.getMessage();
                    }
                    Log.e(SEND_TAG, message);
                    byte[] msg = message.getBytes();

                    AMQP.BasicProperties.Builder builder = new AMQP.BasicProperties.Builder().contentEncoding("UTF-8").contentType("text/plain").headers(new HashMap<String, Object>()).priority(0);
                    sendChannel.basicPublish(POSITION_EXCHANGE_UP, MQ_QUEUE_UP, builder.build(), msg);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            });
        } else {
            outLineMessage.put(mes, mes.getMessage());
//            this.looperNetState();
        }
    }

    //同步多人位置信息
    public void basicPositionPublish(MessageCallBack message) {
        basicPositionPublish(message, false, null);
    }

    public final void basicPositionPublish(MessageCallBack mes, final boolean isOutLine, final String mesMessage) {
        if (this.isNetworkConnect) {
            executorPosUpService.execute(() -> {
                try {
                    if (posSendChannel == null) {
                        if (sendPosConnection == null) {
                            sendConnection = ConnectionUtil.getConnection();
                        }
                        posSendChannel = sendPosConnection.createChannel();
                    }
                    String message;
                    if (isOutLine) {
                        message = mesMessage;
                    } else {
                        message = mes.getMessage();
                    }
                    Log.e(POS_SEND_TAG, message);
                    byte[] msg = message.getBytes();
                    posSendChannel.basicPublish(POSITION_EXCHANGE_POSITION, "", null, msg);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            });
        } else {
            outLinePosMessage.put(mes, mes.getMessage());
//            this.looperNetState();
        }
    }

    /**
     * 收消息
     */
    public void basicConsumer(ResqonCallBack callBack) {
        receSubscriber = new Thread(() -> {
            try {
                receConnection = ConnectionUtil.getConnection();
                receChannel = receConnection.createChannel();
                receChannel.basicQos(1);//一条一条接收消息
                receChannel.exchangeDeclare(POSITION_EXCHANGE_DW, "direct", true, false, null);
                receChannel.queueBind(MQ_QUEUE_DW, POSITION_EXCHANGE_DW, MQ_QUEUE_DW);
                Consumer consumer = new DefaultConsumer(receChannel) {
                    @Override
                    public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {
                        super.handleDelivery(consumerTag, envelope, properties, body);
                        String msg = new String(body, "UTF-8");
                        callBack.onSuccess(msg);
                        receChannel.basicAck(envelope.getDeliveryTag(), false);
                    }
                };
                receChannel.basicConsume(MQ_QUEUE_DW, false, consumer);
            } catch (Exception e) {
            }
        });
        receSubscriber.start();
    }

    /**
     * 同步他人位置
     */
//    public void basicPosConsumer(ResqonCallBack callBack) {
//        recePosSubscriber = new Thread(() -> {
//            try {
//                recePosConnection = ConnectionUtil.getConnection();
//                posReceChannel = recePosConnection.createChannel();
//                posReceChannel.basicQos(0, 1, false);
//                posReceChannel.exchangeDeclare(MQ_EXCHANGE_POS, "fanout", true, false, false, null);
//                posReceChannel.queueDeclare(MQ_QUEUE_POS + imei, true, false, false, null);
//                posReceChannel.queueBind(MQ_QUEUE_POS + imei, MQ_EXCHANGE_POS, "");
//                posConsumer = new DefaultConsumer(posReceChannel) {
//                    @Override
//                    public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {
//                        String msg = new String(body, "UTF-8");
//                        long deliveryTag = envelope.getDeliveryTag();//交付标记
//                        posReceChannel.basicAck(deliveryTag, false);
//                        callBack.onSuccess(msg);
//                    }
//                };
//                posReceChannel.basicConsume(MQ_QUEUE_POS + imei, false, posConsumer);
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//        });
//        recePosSubscriber.start();
//    }

    private final long waitTime = 8 * 1000;
    private final long awaitTime = 5 * 1000;

    public void onDestory() {
        try {
            unLimitUpList.clear();
            unLimitPosUpList.clear();
            if (outLineMessage != null) {
                outLineMessage.clear();
                outLineMessage = null;
            }
            if (outLinePosMessage != null) {
                outLinePosMessage.clear();
                outLinePosMessage = null;
            }
            if (executorUpService != null) {
                try {
                    executorUpService.shutdown();
                    if (!executorUpService.awaitTermination(awaitTime, TimeUnit.MILLISECONDS)) {
                        executorUpService.shutdownNow();
                    }
                } catch (InterruptedException e) {
                    System.out.println("awaitTermination interrupted: " + e);
                    executorUpService.shutdownNow();
                }
                executorUpService = null;
            }
            if (executorPosUpService != null) {
                try {
                    executorPosUpService.shutdown();
                    if (!executorPosUpService.awaitTermination(awaitTime, TimeUnit.MILLISECONDS)) {
                        executorPosUpService.shutdownNow();
                    }
                } catch (InterruptedException e) {
                    System.out.println("awaitTermination interrupted: " + e);
                    executorPosUpService.shutdownNow();
                }
                executorPosUpService = null;
            }
            if (upThreadFactory != null) {
                upThreadFactory = null;
            }

            if (posUpThreadFactory != null) {
                posUpThreadFactory = null;
            }
            if (sendConnection != null && sendConnection.isOpen()) {
                sendConnection.close();
                sendConnection = null;
            }
            if (receConnection != null && receConnection.isOpen()) {
                receConnection.close();
                receConnection = null;
            }
            if (sendPosConnection != null && sendPosConnection.isOpen()) {
                sendPosConnection.close();
                sendPosConnection = null;
            }
            if (recePosConnection != null && recePosConnection.isOpen()) {
                recePosConnection.close();
                recePosConnection = null;
            }

            if (sendChannel != null && sendChannel.isOpen()) {
                sendChannel.close();
                sendChannel = null;
            }
            if (posSendChannel != null && posSendChannel.isOpen()) {
                posSendChannel.close();
                posSendChannel = null;
            }
            if (receChannel != null && receChannel.isOpen()) {
                receChannel.close();
                receChannel = null;
            }
            if (posReceChannel != null && posReceChannel.isOpen()) {
                posReceChannel.close();
                posReceChannel = null;
            }

            if (receSubscriber != null) {
                receSubscriber.interrupt();
                receSubscriber = null;
            }
            if (recePosSubscriber != null) {
                recePosSubscriber.interrupt();
                recePosSubscriber = null;
            }
        } catch (IOException e) {
            e.printStackTrace();
            if (Constant.DEBUG) {
                Log.e(TAG, "关闭MQ连接");
            }
        } catch (TimeoutException e) {
            e.printStackTrace();
            if (Constant.DEBUG) {
                Log.e(TAG, "关闭MQ连接");
            }
        } finally {
            executorUpService = null;
            executorPosUpService = null;
            upThreadFactory = null;
            posUpThreadFactory = null;
            sendChannel = null;
            receChannel = null;
            posSendChannel = null;
            posReceChannel = null;
            sendConnection = null;
            receConnection = null;
            sendPosConnection = null;
            recePosConnection = null;
            receSubscriber = null;
        }
    }

//    /**
//     * 发送心跳
//     */
//    public String hbService() {
//        try {
//            BaseObj obj = getBase(TYPE_HD, "");
//            JSONObject jsonObject = baseObj(obj);
//            jsonObject.put(MAC, PhoneInfoUtils.getMobileMAC(this.context));
////            BatteryInfo batteryInfo = PhoneInfoUtils.getBatteryInfo();
////            jsonObject.put(TEM, batteryInfo.getTemp());
////            jsonObject.put(VOL, batteryInfo.getVoltage());
////            jsonObject.put(SWR, "0");
////            jsonObject.put(POWER, batteryInfo.getLevel());
//            jsonObject.put(SIGNAL, PhoneInfoUtils.getSignalInfo(this.context));
////            jsonObject.put(AMP, App.getInstance().getDbType().getType());
//            return jsonObject.toString();
//        } catch (Exception e) {
//            e.printStackTrace();
//            return null;
//        }
//    }
//
//    private BaseObj getBase(String ty, String sty) {
//        if (TextUtils.isEmpty(ty)) {
//            throw new NullPointerException(" ty  不能为空 ！");
//        }
//        String ai = String.valueOf(receBean.getAi());
//        String an = receBean.getAn();
////        String tskGroupId = receBean.getTskGroupId();
//        String tskId = String.valueOf(receBean.getTskId());
//        String tskName = receBean.getTskName();
////        String optPhoneId = receBean.getOptPhoneId();
//        String deviceName = receBean.getDeviceGroup() == null ? "" : receBean.getDeviceGroup() + "_" + PhoneInfoUtils.GetNetworkType(this.context);
//        String plate = receBean.getPlate();
//        String imeiNum = PhoneInfoUtils.getImeiNum(this.context);
//        String datasource = DATASOURCE_VALUE;
//        BaseObj obj = new BaseObj(ty, sty, ai, an, tskId, deviceName, plate, imeiNum, tskName,datasource);
//        return obj;
//    }
//
//    /**
//     * 添加请求公共字段
//     *
//     * @param obj
//     * @return
//     * @throws JSONException
//     */
//    private JSONObject baseObj(BaseObj obj) throws JSONException {
//        JSONObject result = new JSONObject();
//        result.put(TYPE, obj.getTy()); //"ty": "hb", 类型
//        if (TYPE_EVT.equals(obj.getTy()) || TYPE_SCAN.equals(obj.getTy()) || TYPE_OTHER.equals(obj.getTy()) || DCELL.equals(obj.getTy())) {
//            result.put(STY, obj.getSty());
//        }
//        result.put(AI, obj.getAi());
//        result.put(AN, obj.getAn());
////        result.put(TSKGROUP_ID, obj.getTskGroupId());
//        result.put(TSK_ID, obj.getTskId());
//        result.put(TSK_NAME, obj.getTskName());
//        result.put(GPS, getGPS());
////        result.put(OPT_PHONEID, obj.getOptPhoneId());
//        result.put(FROM, APP);
//        result.put(DTY, LOC);
//        imei = obj.getImei();
//        result.put(IMEI, imei);
//        result.put(PLATE, obj.getPlate());
//        result.put(DEVICE_NAME, obj.getDeivceName());
//        result.put(TIME, TimeUtils.getUTCTimeDef());
//        result.put(DEVICE_TYPE, PTS_3);
//        result.put(DATASOURCE,obj.getDatasource());
//        return result;
//    }
//
//    private JSONObject getGPS() {
//        try {
//            JSONObject gps = new JSONObject();
//            gps.put(GPSTIME, TimeUtils.getUTCTimeDef());
//            // TODO: 2019/5/16  后续将替换成正式的GPS数据
////            String[] gpsPoint = LocationService.getInstance().getGpsPoint();
//            gps.put(GPSLNG, LocationService.getInstance().getLng());//gpsPoint[1];
//            gps.put(GPSLAT, LocationService.getInstance().getLat());//gpsPoint[0];
//
////            String[] doubles = coord[coord_index++].split(",");
////            gps.put(GPSLNG, doubles[0]);
////            gps.put(GPSLAT, doubles[1]);
//            gps.put(GPSLOCTYPE, GPSTYPE_BAIDU);
//            return gps;
//        } catch (JSONException e) {
//            e.printStackTrace();
//        }
//        return null;
//    }
//
//    private JSONObject getGPS(LatLng latLng) {
//        try {
//            JSONObject gps = new JSONObject();
//            gps.put(GPSTIME, TimeUtils.getUTCTimeDef());
//            // TODO: 2019/5/16  后续将替换成正式的GPS数据
//            String[] gpsPoint = LocationService.getInstance().getGpsPoint();
//            gps.put(GPSLNG, latLng.latitude);//gpsPoint[1];
//            gps.put(GPSLAT, latLng.longitude);//gpsPoint[0];
//
////            String[] doubles = coord[coord_index++].split(",");
////            gps.put(GPSLNG, doubles[0]);
////            gps.put(GPSLAT, doubles[1]);
//            gps.put(GPSLOCTYPE, GPSTYPE_BAIDU);
//            return gps;
//        } catch (JSONException e) {
//            e.printStackTrace();
//        }
//        return null;
//    }
}
